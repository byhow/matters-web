/* @styled-jsx=global */
:root {
  --eidtor-bottom-bar-height: var(--global-nav-height);
}

.articleEditor {
  position: relative;

  & .ProseMirror {
    min-height: 50vh;
    margin-bottom: var(--eidtor-bottom-bar-height);

    @media (--lg-up) {
      margin-bottom: 0;
    }

    /* outline */
    &:focus {
      outline: none;
    }

    /* horizontal rule */
    & hr.ProseMirror-selectednode {
      &::before {
        background-image: radial-gradient(
          circle,
          var(--color-black) 0.25rem,
          transparent 0.25rem
        );
      }

      &::after {
        position: absolute;
        inset: 0;
        content: '';
        border: 1px solid var(--color-line-grey-light);
        border-radius: 0.5rem;
      }
    }

    /* placeholder */
    & p.is-editor-empty:first-child::before {
      float: left;
      height: 0;
      color: var(--color-grey);
      pointer-events: none;
      content: attr(data-placeholder);
    }

    & figcaption:has(.ProseMirror-trailingBreak) {
      position: relative;
    }

    & figcaption:has(.ProseMirror-trailingBreak)::before {
      position: absolute;
      left: 0;
      z-index: -1;
      width: 100%;
      color: var(--color-grey);
      content: '添加說明文字…';
    }

    /* disable interactive */
    & a {
      pointer-events: none;
    }

    & .figure-embed-link-input {
      & input {
        display: block;
        height: 1.875rem;
        line-height: var(--line-height-article-base);
        color: var(--color-grey);

        &::placeholder {
          color: var(--color-grey);
          opacity: 1; /* Firefox */
        }
      }
    }
  }

  &.revisedMode {
    & figure {
      cursor: not-allowed;
      opacity: 0.5;

      & > * {
        pointer-events: none;
      }
    }
  }
}

html[lang='zh-Hans'],
html[data-lang='zh-Hans'] {
  &
    .articleEditor
    .ProseMirror
    figcaption:has(.ProseMirror-trailingBreak)::before {
    content: '添加说明文字…';
  }
}

html[lang='en'],
html[data-lang='en'] {
  &
    .articleEditor
    .ProseMirror
    figcaption:has(.ProseMirror-trailingBreak)::before {
    content: 'Add caption…';
  }
}
